{{#layout}}{{#title}}게임 대기실{{/title}}
{{#content}}
    <div class="room-title" id="room-title"></div>
    <ul class="player-list" id="player-list"></ul>
    <button class="btn primary-btn full" onclick="startGame(roomId);">시작하기</button>
    <div class="btn-group">
        <button class="btn third-btn" onclick="ready(roomId);">준비 | 준비 취소</button>
        <button class="btn secondary-btn" onclick="leaveRoom(roomId);">방 나가기</button>
    </div>
{{/content}}
{{#css}}
    <link href="/css/waitroom.css" rel="stylesheet">
    <link href="/css/modal.css" rel="stylesheet">
{{/css}}
{{#js}}
    <script type="text/javascript" src="/js/waitroom.js"></script>
    <script>
        const roomId = document.location.href.split('/')[4];

        const startGame = async (roomId) => {
            try {
                await start(roomId);
            } catch (e) {
                alert("게임 시작에 실패했습니다.");
            }
        }

        (async () => {
            const response = await axios.get(`/rooms/${roomId}/wait`);

            putHtml('player-list', createPlayer(response.data.players).join(''));
            putHtml('room-title', response.data.title);

            document.addEventListener("click", async (event) => {
                if (event.target.classList.contains("kick")) {
                    const gamerId = event.target.getAttribute("data-gamer-id");

                    try {
                        await axios.put(`/rooms/${roomId}/kick`, {'gamerId': gamerId});
                    } catch (e) {
                        alert(e.response.data.message);
                    }
                }
            });
        })();
    </script>
{{/js}}
{{/layout}}

