plugins {
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExtensions
}
ext {
    snippetsDir = file('build/generated-snippets')
}
dependencies {
    implementation project(':module-common')
    implementation project(':module-core')
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    runtimeOnly group: 'com.h2database', name: 'h2', version: '1.4.200'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'
    implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.4'
    implementation 'io.sentry:sentry-spring-boot-starter:5.2.4'
    implementation 'io.sentry:sentry-logback:5.2.4'
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    testImplementation group: 'org.springframework.security', name: 'spring-security-test'
    asciidoctorExtensions "org.springframework.restdocs:spring-restdocs-asciidoctor"
}
test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    doFirst {}
    doLast {}
    configurations "asciidoctorExtensions"
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
    println "start copyDocument"
    dependsOn asciidoctor
    from file("${asciidoctor.outputDir}")
    into file("src/main/resources/static/docs")
}
clean {
    // asciidoctor 기존에 생성된 API 문서 삭제
    delete file("src/main/resources/static/docs")
}

build {
    doFirst {}
    doLast {}
    dependsOn copyDocument
}